import account from"../../scripts/accounts.js";import questionStats from"../../scripts/auth/question-stats.js";import api from"../../scripts/api/index.js";import audio from"../../audio/index.js";import{arrayToRange,createBonusCard,rangeToArray}from"../../scripts/utilities/index.js";import CategoryManager from"../../../quizbowl/category-manager.js";import{getDropdownValues}from"../../scripts/utilities/dropdown-checklist.js";import CategoryModal from"../../scripts/components/CategoryModal.min.js";import DifficultyDropdown from"../../scripts/components/DifficultyDropdown.min.js";// Functions and variables specific to the bonuses page.
// Status variables
let currentBonusPart=-1,maxPacketNumber=24,questionNumber=0,randomBonuses=[],bonuses=[{}];// WARNING: 1-indexed
/**
 * An array of random questions.
 * We get 20 random questions at a time so we don't have to make an HTTP request between every question.
 */const stats=window.sessionStorage.getItem("bonus-stats")?JSON.parse(window.sessionStorage.getItem("bonus-stats")):{0:0,10:0,20:0,30:0},defaults={alternateSubcategories:[],categories:[],difficulties:[],minYear:2010,maxYear:2024,packetNumbers:[],setName:"",subcategories:[],threePartBonuses:!0,version:"01-06-2024"};// Room settings
let query;window.localStorage.getItem("singleplayer-bonus-query")?(query=JSON.parse(window.localStorage.getItem("singleplayer-bonus-query")),query.version!==defaults.version&&(query=defaults,window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query)))):query=defaults;const categoryManager=new CategoryManager(query.categories,query.subcategories,query.alternateSubcategories),settings=window.localStorage.getItem("singleplayer-bonus-settings")?JSON.parse(window.localStorage.getItem("singleplayer-bonus-settings")):{selectBySetName:!1,showHistory:!0,typeToAnswer:!0};// Load query and settings first so user doesn't see the default settings
settings.selectBySetName&&(document.getElementById("difficulty-settings").classList.add("d-none"),document.getElementById("set-settings").classList.remove("d-none"),document.getElementById("toggle-select-by-set-name").checked=!0,document.getElementById("toggle-standard-only").disabled=!0,document.getElementById("toggle-three-part-bonuses").disabled=!0),settings.showHistory||(document.getElementById("toggle-show-history").checked=!1,document.getElementById("room-history").classList.add("d-none")),settings.typeToAnswer||(document.getElementById("type-to-answer").checked=!1),query.packetNumbers&&(document.getElementById("packet-number").value=arrayToRange(query.packetNumbers)),query.setName&&(document.getElementById("set-name").value=query.setName,api.getNumPackets(query.setName).then(a=>{maxPacketNumber=a,0===maxPacketNumber?document.getElementById("set-name").classList.add("is-invalid"):document.getElementById("packet-number").placeholder=`Packet Numbers (1-${maxPacketNumber})`})),query.threePartBonuses||(document.getElementById("toggle-three-part-bonuses").checked=!1),updateStatDisplay();function queryLock(){document.getElementById("question").textContent="Fetching questions...",document.getElementById("start").disabled=!0,document.getElementById("next").disabled=!0,document.getElementById("reveal").disabled=!0}function queryUnlock(){document.getElementById("question").textContent="",document.getElementById("start").disabled=!1,document.getElementById("next").disabled=!1,document.getElementById("reveal").disabled=!1}async function advanceQuestion(){if(settings.selectBySetName){do// Go to the next packet if you reach the end of this packet
if(questionNumber++,questionNumber>bonuses.length){if(query.packetNumbers.shift(),0===query.packetNumbers.length)return window.alert("No more questions left"),document.getElementById("reveal").disabled=!0,document.getElementById("next").disabled=!0,!1;queryLock();try{bonuses=await api.getPacketBonuses(query.setName,query.packetNumbers[0])}finally{queryUnlock()}questionNumber=1}// Get the next question if the current one is in the wrong category and subcategory
while(!categoryManager.isValidCategory(bonuses[questionNumber-1]));0<Object.keys(bonuses[0]).length&&(document.getElementById("question-number-info").textContent=questionNumber)}else{queryLock();try{bonuses=await getRandomBonus(query),bonuses=[bonuses]}finally{queryUnlock()}if(!bonuses[0])return window.alert("No questions found"),!1;query.setName=bonuses[0].set.name,query.packetNumbers=[bonuses[0].packet.number],document.getElementById("question-number-info").textContent=bonuses[0].number,questionNumber=1}return!0}/**
 * Clears user stats.
 */function clearStats(){stats[0]=0,stats[10]=0,stats[20]=0,stats[30]=0,updateStatDisplay(),window.sessionStorage.removeItem("bonus-stats")}function createBonusPart(a,b,c=10){const d=document.createElement("input");d.id=`checkbox-${a+1}`,d.className="checkbox form-check-input rounded-0 me-1",d.type="checkbox",d.style="width: 20px; height: 20px; cursor: pointer",d.addEventListener("click",function(){this.blur()});const e=document.createElement("label");e.style="cursor: pointer",e.appendChild(d);const f=document.createElement("p");f.innerHTML=`[${c}] ${b}`;const g=document.createElement("div");g.id=`bonus-part-${a+1}`,g.appendChild(f);const h=document.createElement("div");h.className="d-flex",h.appendChild(e),h.appendChild(g),document.getElementById("question").appendChild(h)}function createLeadin(a){const b=document.createElement("p");b.id="leadin",b.innerHTML=a,document.getElementById("question").appendChild(b)}function getPointsPerPart(a){return Array.from(document.getElementsByClassName("checkbox")).map((b,c)=>b.checked?void 0===a?.values||null===a?.values||void 0===a?.values[c]||null===a?.values[c]?10:a.values[c]:0)}async function getRandomBonus({alternateSubcategories:a,categories:b,difficulties:c,minYear:d,maxYear:e,subcategories:f,threePartBonuses:g}){if(categoryManager?.percentView)return b=[categoryManager.getRandomCategory()],f=[],a=[],await loadRandomBonuses({alternateSubcategories:a,categories:b,difficulties:c,maxYear:e,minYear:d,subcategories:f,threePartBonuses:g}),randomBonuses.pop();0===randomBonuses.length&&(await loadRandomBonuses({alternateSubcategories:a,categories:b,difficulties:c,minYear:d,maxYear:e,number:20,subcategories:f,threePartBonuses:g}));const h=randomBonuses.pop();// Begin loading the next batch of questions (asynchronously)
return 0===randomBonuses.length&&loadRandomBonuses({alternateSubcategories:a,categories:b,difficulties:c,minYear:d,maxYear:e,number:20,subcategories:f,threePartBonuses:g}),h}async function giveAnswer(a){const{directive:b,directedPrompt:c}=await api.checkAnswer(bonuses[questionNumber-1].answers[currentBonusPart],a);"accept"===b?(document.getElementById(`checkbox-${currentBonusPart+1}`).checked=!0,document.getElementById("reveal").disabled=!1,revealBonusPart(),audio.soundEffects&&audio.correct.play()):"reject"===b?(document.getElementById("reveal").disabled=!1,revealBonusPart(),audio.soundEffects&&audio.incorrect.play()):"prompt"===b?(document.getElementById("answer-input-group").classList.remove("d-none"),document.getElementById("answer-input").focus(),document.getElementById("answer-input").placeholder=c?`Prompt: "${c}"`:"Prompt"):void 0}async function loadRandomBonuses({alternateSubcategories:a,categories:b,difficulties:c,maxYear:d,minYear:e,number:h=1,subcategories:f,threePartBonuses:g}){randomBonuses=[],randomBonuses=await api.getRandomBonus({alternateSubcategories:a,categories:b,difficulties:c,maxYear:d,minYear:e,number:h,subcategories:f,threePartBonuses:g})}/**
 * Loads and reads the next question.
 * @param {boolean} revealedAllParts - Whether all parts of the bonus have been revealed. if true, then question stats are uploaded to the server.
 */async function next(a){if(a&&(await account.getUsername())){const a=getPointsPerPart(bonuses[questionNumber-1]);questionStats.recordBonus(bonuses[questionNumber-1],a)}document.getElementById("question").textContent="",document.getElementById("reveal").disabled=!1,document.getElementById("next").textContent="Skip";const b=await advanceQuestion();b&&(document.getElementById("set-name-info").textContent=query.setName,document.getElementById("packet-number-info").textContent=query.packetNumbers[0],document.getElementById("packet-length-info").textContent=settings.selectBySetName?bonuses.length:"-",currentBonusPart=0,createLeadin(bonuses[questionNumber-1].leadin),createBonusPart(currentBonusPart,bonuses[questionNumber-1].parts[currentBonusPart],bonuses[questionNumber-1].values?.at(currentBonusPart)))}/**
 * Called when the users wants to reveal the next bonus part.
 */function revealBonusPart(){if(!(currentBonusPart>=bonuses[questionNumber-1].parts.length)){const a=document.createElement("p");return a.innerHTML="ANSWER: "+bonuses[questionNumber-1].answers[currentBonusPart],document.getElementById(`bonus-part-${currentBonusPart+1}`).appendChild(a),currentBonusPart++,currentBonusPart>=bonuses[questionNumber-1].parts.length?(document.getElementById("reveal").disabled=!0,void(document.getElementById("next").textContent="Next")):void createBonusPart(currentBonusPart,bonuses[questionNumber-1].parts[currentBonusPart],bonuses[questionNumber-1].values?.at(currentBonusPart))}}/**
 * Calculates the points per bonus and updates the display.
 */function updateStatDisplay(){const a=stats[0]+stats[10]+stats[20]+stats[30],b=30*stats[30]+20*stats[20]+10*stats[10],c=Math.round(100*b/a)/100||0,d=1===a?"":"es";document.getElementById("statline").textContent=`${c} PPB with ${a} bonus${d} seen (${stats[30]}/${stats[20]}/${stats[10]}/${stats[0]}, ${b} pts)`}function updateStatsForCurrentBonus(){const a=getPointsPerPart(bonuses[questionNumber-1]).reduce((c,a)=>c+a,0);stats[a]=isNaN(stats[a])?1:stats[a]+1,window.sessionStorage.setItem("bonus-stats",JSON.stringify(stats))}document.getElementById("answer-form").addEventListener("submit",function(a){a.preventDefault(),a.stopPropagation();const b=document.getElementById("answer-input").value;document.getElementById("answer-input").value="",document.getElementById("answer-input").blur(),document.getElementById("answer-input").placeholder="Enter answer",document.getElementById("answer-input-group").classList.add("d-none"),giveAnswer(b)}),document.getElementById("clear-stats").addEventListener("click",function(){this.blur(),clearStats()}),document.getElementById("next").addEventListener("click",function(){this.blur(),createBonusCard(bonuses[questionNumber-1]);const a="Next"===this.innerHTML;a&&(updateStatsForCurrentBonus(),updateStatDisplay()),next(a)}),document.getElementById("packet-number").addEventListener("change",function(){// if field is blank, store blank result in `query`
query.packetNumbers=rangeToArray(this.value.trim(),0),window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query)),query.packetNumbers=rangeToArray(this.value.trim(),maxPacketNumber)}),document.getElementById("report-question-submit").addEventListener("click",function(){api.reportQuestion(document.getElementById("report-question-id").value,document.getElementById("report-question-reason").value,document.getElementById("report-question-description").value)}),document.getElementById("reveal").addEventListener("click",function(){this.blur(),document.getElementById("type-to-answer").checked?(document.getElementById("answer-input-group").classList.remove("d-none"),document.getElementById("answer-input").focus(),this.disabled=!0):revealBonusPart()}),document.getElementById("set-name").addEventListener("change",async function(){query.setName=this.value.trim(),api.getSetList().includes(this.value)||0===this.value.length?this.classList.remove("is-invalid"):this.classList.add("is-invalid"),maxPacketNumber=await api.getNumPackets(this.value),document.getElementById("packet-number").placeholder=""===this.value||0===maxPacketNumber?"Packet Numbers":`Packet Numbers (1-${maxPacketNumber})`,window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query))}),document.getElementById("start").addEventListener("click",async function(){if(this.blur(),0===query.setName.length&&settings.selectBySetName)return window.alert("Please enter a set name."),!1;if(0===query.packetNumbers.length&&settings.selectBySetName&&(query.packetNumbers=rangeToArray(document.getElementById("packet-number").value.trim(),maxPacketNumber)),document.getElementById("next").disabled=!1,document.getElementById("next").textContent="Skip",document.getElementById("settings").classList.add("d-none"),settings.selectBySetName){queryLock(),questionNumber=0;try{bonuses=await api.getPacketBonuses(query.setName,query.packetNumbers[0])}finally{queryUnlock()}}next(!1)}),document.getElementById("toggle-settings").addEventListener("click",function(){this.blur(),document.getElementById("buttons").classList.toggle("col-lg-9"),document.getElementById("buttons").classList.toggle("col-lg-12"),document.getElementById("content").classList.toggle("col-lg-9"),document.getElementById("content").classList.toggle("col-lg-12"),document.getElementById("settings").classList.toggle("d-none"),document.getElementById("settings").classList.toggle("d-lg-none")}),document.getElementById("toggle-select-by-set-name").addEventListener("click",function(){this.blur(),settings.selectBySetName=this.checked,document.getElementById("toggle-standard-only").disabled=this.checked,document.getElementById("toggle-three-part-bonuses").disabled=this.checked,this.checked?(document.getElementById("difficulty-settings").classList.add("d-none"),document.getElementById("set-settings").classList.remove("d-none")):(document.getElementById("difficulty-settings").classList.remove("d-none"),document.getElementById("set-settings").classList.add("d-none")),window.localStorage.setItem("singleplayer-bonus-settings",JSON.stringify(settings))}),document.getElementById("toggle-show-history").addEventListener("click",function(){this.blur(),settings.showHistory=this.checked,this.checked?document.getElementById("room-history").classList.remove("d-none"):document.getElementById("room-history").classList.add("d-none"),window.localStorage.setItem("singleplayer-bonus-settings",JSON.stringify(settings))}),document.getElementById("toggle-standard-only").addEventListener("click",function(){this.blur(),query.standardOnly=this.checked,loadRandomBonuses(query),window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query))}),document.getElementById("toggle-three-part-bonuses").addEventListener("click",function(){this.blur(),query.threePartBonuses=this.checked,loadRandomBonuses(query),window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query))}),document.getElementById("type-to-answer").addEventListener("click",function(){this.blur(),settings.typeToAnswer=this.checked,window.localStorage.setItem("singleplayer-bonus-settings",JSON.stringify(settings))}),document.getElementById("year-range-a").onchange=function(){query.minYear=$("#slider").slider("values",0),query.maxYear=$("#slider").slider("values",1),loadRandomBonuses(query),window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query))},document.getElementById("year-range-b").onchange=function(){query.minYear=$("#slider").slider("values",0),query.maxYear=$("#slider").slider("values",1),loadRandomBonuses(query),window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query))},document.addEventListener("keydown",a=>{if(!["INPUT","TEXTAREA","SELECT"].includes(document.activeElement.tagName))switch(a.key?.toLowerCase()){case" ":document.getElementById("reveal").click(),a.target===document.body&&a.preventDefault();break;case"e":return document.getElementById("toggle-settings").click();case"k":return document.getElementsByClassName("card-header-clickable")[0].click();case"n":return document.getElementById("next").click();case"s":return document.getElementById("start").click();case"t":return document.getElementsByClassName("star-bonus")[0].click();case"y":return navigator.clipboard.writeText(bonuses[0]?._id??"");case"0":return document.getElementById(`checkbox-${currentBonusPart}`).click();case"1":return document.getElementById("checkbox-1").click();case"2":return document.getElementById("checkbox-2").click();case"3":return document.getElementById("checkbox-3").click();case"4":return document.getElementById("checkbox-4").click()}}),$(document).ready(function(){$("#slider").slider("values",0,query.minYear),$("#slider").slider("values",1,query.maxYear)}),document.getElementById("year-range-a").textContent=query.minYear,document.getElementById("year-range-b").textContent=query.maxYear,ReactDOM.createRoot(document.getElementById("category-modal-root")).render(/*#__PURE__*/React.createElement(CategoryModal,{categoryManager:categoryManager,onClose:()=>{({categories:query.categories,subcategories:query.subcategories,alternateSubcategories:query.alternateSubcategories}=categoryManager.export()),loadRandomBonuses(query),window.localStorage.setItem("singleplayer-bonus-query",JSON.stringify(query))}})),ReactDOM.createRoot(document.getElementById("difficulty-dropdown-root")).render(/*#__PURE__*/React.createElement(DifficultyDropdown,{startingDifficulties:query.difficulties,onChange:()=>{query.difficulties=getDropdownValues("difficulties"),loadRandomBonuses(query),window.localStorage.setItem("singleplayer-tossup-query",JSON.stringify(query))}}));